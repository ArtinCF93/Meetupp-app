{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.js","api.js","EventGenre.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsedInfo","handleClick","setState","event","this","props","className","summary","location","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","showSuggestions","updateLocation","type","onChange","onFocus","display","NumberOfEvents","errorText","handleNumberChanged","updateEventCount","numberOfEvents","WelcomeScreen","align","src","alt","getAccessToken","rel","href","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","extractLocations","Set","getEvents","NProgress","start","token","url","axios","get","data","localStorage","setItem","JSON","stringify","done","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","EventGenre","COLORS","useState","setData","useEffect","genre","split","includes","name","ResponsiveContainer","height","PieChart","width","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","App","currentLocation","showWelcomeScreen","updateEvents","eventCount","locationEvents","slice","getData","number","city","shift","mounted","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1f9bc61e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n\r\n    state={\r\n      collapsedInfo: true,\r\n    };\r\n\r\n    handleClick = () => {\r\n      this.setState({\r\n        collapsedInfo: !this.state.collapsedInfo // '!' inverts the state\r\n      })\r\n    };\r\n\r\n    \r\n\r\n\r\n  render() {\r\n\r\n    let event = this.props.event;\r\n    let collapsedInfo = this.state.collapsedInfo;\r\n\r\n    let renderInfo = () => {\r\n      if(collapsedInfo === true){\r\n        return <button className='showDetails' onClick={this.handleClick}>Show details</button>\r\n      } else {\r\n        return <div className='event_info'>\r\n        {event.description}\r\n        <br></br>\r\n        {/* {event.start.dateTime} */}\r\n        <button className='closeDetails' onClick={this.handleClick}>Close details</button>\r\n      </div>\r\n      }\r\n    }    \r\n\r\n    return (\r\n      <div className='event'>\r\n\r\n        <h2 className='summary'>{event.summary}</h2>\r\n        <p className='location'>{event.location}</p>\r\n        {renderInfo()}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import Event from './Event';\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    let events = this.props.events //passing the events prop from the EventList.test.js\r\n    return (\r\n      <ul className='EventList'>\r\n          {events.map(event =>\r\n            <li key={event.id}>\r\n                <Event \r\n                  event={event}\r\n                />\r\n            </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass Alert extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = 'Alert'>\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props){\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n    constructor(props) {\r\n      super(props);\r\n      this.color = 'orange';\r\n    }\r\n  }\r\n\r\nexport {InfoAlert, ErrorAlert, WarningAlert};\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport './css/CitySearch.css'\r\nimport {InfoAlert} from './Alert';\r\n// import { mockData } from './mock-data';\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: '',\r\n    suggestions: []\r\n  }\r\n\r\n  //part of scenario 2 of feature 1\r\n  //Show a List of Suggestions During Search\r\n  handleInputChanged = (event) => {\r\n    let value = event.target.value;\r\n    let suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText:''\r\n      });\r\n    }\r\n  };\r\n\r\n  //part of scenario 3 of feature 1\r\n  //User Can Select a City from the List of Suggestions\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateLocation(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='CitySearch'>\r\n        <br></br>\r\n        <br></br>\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type='text'\r\n          className='city'\r\n          //the value of state is query\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <p>City Filter</p>\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state={\r\n    errorText: ''\r\n  }\r\n\r\n\r\n\r\nhandleNumberChanged = (event) => {\r\nlet value = +event.target.value;\r\nif (value > 250) {\r\n  this.setState({\r\n    errorText: 'Please choose a number between 1 and 250',\r\n  })\r\n} else {\r\n  this.props.updateEventCount(value);\r\n  this.setState({\r\n    errorText: ''\r\n  })\r\n}\r\n};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <p>Number of Items per Page</p>\r\n        <input \r\n            type='text'\r\n            className='NumberOfEventsInput'\r\n            value={this.props.numberOfEvents}\r\n            onChange={this.handleNumberChanged}\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents","import React from \"react\";\r\nimport './css/WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n    return (\r\n            <div className=\"WelcomeScreen\">\r\n                <h1>Welcome to the Meet app</h1>\r\n                <h4>\r\n                    Log in to see upcoming events around the world for\r\n                    full-stack\r\n                    developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img\r\n                                className=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                alt=\"Google sign-in\"\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }}\r\n                            rel=\"nofollow noopener\"\r\n                            className=\"btn-text\"\r\n                        >\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <a\r\n                    href=\"https://artincf93.github.io/meet/privacy.html\"\r\n                    rel=\"nofollow noopener\"\r\n                >\r\n                    Privacy policy\r\n                </a>\r\n            </div>\r\n        )\r\n}\r\nexport default WelcomeScreen;\r\n","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n\r\n// this function checks whether there is a path, then build the url with the current path\r\nlet removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    let newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    let newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n};\r\n\r\nexport let checkToken = async (accessToken) => {\r\n  let result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\n\r\nexport let extractLocations = (events) => {\r\n  let extractLocations = events.map((event) => event.location);\r\n  let locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n\r\nexport let getEvents = async (events) => {\r\n  NProgress.start();\r\n\r\n  // if (window.location.href.startsWith(\"http://localhost\")) {\r\n  //   NProgress.done();\r\n  //   return mockData;\r\n  // }\r\n\r\n  // if (!navigator.onLine) {\r\n  //   const data = localStorage.getItem(\"lastEvents\");\r\n  //   NProgress.done();\r\n  //   return data ? JSON.parse(events).events : [];;\r\n  // }\r\n\r\n  let token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    let url = 'https://56a0p7pzx8.execute-api.us-west-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    let result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\n\r\nexport let getAccessToken = async () => {\r\n  let accessToken = localStorage.getItem('access_token');\r\n  let tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) { //starts by checking if there is an access token or error in checking\r\n    await localStorage.removeItem('access_token');\r\n    let searchParams = new URLSearchParams(window.location.search);\r\n    let code = await searchParams.get('code');\r\n\r\n    if (!code) { //if no authorization code is found\r\n      let results = await axios.get('https://56a0p7pzx8.execute-api.us-west-1.amazonaws.com/dev/api/get-auth-url');\r\n      let { authUrl } = results.data;\r\n\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\n\r\nlet getToken = async (code) => {\r\n  let encodeCode = encodeURIComponent(code);\r\n  let { access_token } = await fetch(\r\n    'https://56a0p7pzx8.execute-api.us-west-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem('access_token', access_token);\r\n\r\n  return access_token;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n  \r\n  let EventGenre = ({events}) => {\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#90681c'];\r\n    let [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n    let getData = () => {\r\n        let genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        \r\n        let data = genres.map((genre)=>{\r\n        let value = events.filter(({ summary }) => summary.split(' ').includes(genre)).length;\r\n        return {name: genre, value: value}\r\n        });\r\n        return data\r\n    };\r\n    setData(() => getData()); }, [events]);\r\n    \r\n\r\n      return (\r\n        <ResponsiveContainer height={400}>\r\n          <PieChart width={400} height={400}>\r\n            <Pie\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              labelLine={false}\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n              label={({ name, percent }) =>\r\n            `${name} ${(percent * 100).toFixed(0)}%`\r\n          }\r\n            >\r\n              {data.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n              ))}\r\n            </Pie>\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      );\r\n    }\r\n\r\n    export default EventGenre;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport './css/App.css';\r\nimport './css/nprogress.css';\r\n\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport WelcomeScreen from './WelcomeScreen';\r\n\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\r\n\r\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport EventGenre from './EventGenre';\r\n// all these in combo draw up the chart\r\n//ScatterChart is imported as the indicated graph of choice\r\n//Scatter is imported top draw the points\r\n//XAxis and YAxis are imported for the horizontal and vertical axes respectively\r\n//CartesianGrid is importrd to draw the rectangular coordinate system\r\n//tooltip is impprted to reveal information about the chart on hover\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    currentLocation: 'all',\r\n    numberOfEvents: 32,\r\n    showWelcomeScreen: true\r\n  }\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    getEvents().then((events) => {\r\n      let locationEvents = (location === 'all') ?\r\n        events :\r\n        events.filter((event) => event.location === location);\r\n      locationEvents = locationEvents.slice(0, eventCount)\r\n      this.setState({\r\n        events: locationEvents,\r\n      });\r\n    });\r\n  }\r\n\r\n  updateEventCount = (eventCount) => {\r\n    this.setState({\r\n      numberOfEvents: eventCount\r\n    });\r\n    let currentLocation = this.state.currentLocation;\r\n    this.updateEvents(currentLocation, eventCount);\r\n  }\r\n\r\n  updateLocation = (location) => {\r\n    this.setState({\r\n      currentLocation: location\r\n    });\r\n    this.updateEvents(location, this.state.numberOfEvents)\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    let accessToken = localStorage.getItem(\"access_token\");\r\n    let searchParams = new URLSearchParams(window.location.search);\r\n    let code = searchParams.get(\"code\");\r\n    //the checkToken() checks whether the 'accessToken' is true or false and assign it to this variable\r\n    // checkToken(accessToken)\r\n    if (code || accessToken) {\r\n      this.setState({ showWelcomeScreen: false });\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events: events.slice(0, this.state.numberOfEvents),\r\n            locations: extractLocations(events),\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getData = () => {\r\n    let { locations, events } = this.state;\r\n    let data = locations.map((location) => {\r\n      let number = events.filter((event) => event.location === location).length\r\n      let city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n\r\n    let showWelcomeScreen = this.state.showWelcomeScreen;\r\n\r\n    if (showWelcomeScreen)\r\n      return <div className='App'>\r\n        <WelcomeScreen\r\n          getAccessToken={() => { getAccessToken() }}\r\n        />\r\n      </div>\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <CitySearch\r\n          locations={this.state.locations}\r\n          updateLocation={this.updateLocation}\r\n        />\r\n        <NumberOfEvents\r\n          locations={this.state.locations}\r\n          numberOfEvents={this.state.numberOfEvents}\r\n          updateEventCount={this.updateEventCount}\r\n        />\r\n        <div className='data-vis-wrapper'>\r\n          <EventGenre events={this.state.events} />\r\n          <h4>Events in Each City</h4>\r\n          <ResponsiveContainer height={200}>\r\n            <ScatterChart\r\n              //dont need a width and height if \r\n              // width={400}\r\n              // height={400}\r\n              margin={{\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n              }}\r\n            >\r\n              <CartesianGrid />\r\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n              <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\r\n              <Tooltip cursor={{ strokeDasharray: '2 2' }} />\r\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('4f3d1b1955a74da8b75f307a5ef19359').install();\r\n\r\n// let express = require('express');\r\n// let app = express();\r\n\r\n// let cors = require('cors');\r\n\r\n// let allowedOrigins = ['http://localhost:3000', 'https://amazonaws.com'];\r\n\r\n// app.use(cors(\r\n//    {\r\n//    origin: (origin, callback) => {\r\n//      if(!origin) return callback(null, true);\r\n//      if(allowedOrigins.indexOf(origin) === -1){ // If a specific origin isn’t found on the list of allowed origins\r\n//        let message = 'The CORS policy for this application doesn’t allow access from origin ' + origin;\r\n//        return callback(new Error(message ), false);\r\n//      }\r\n//      return callback(null, true);\r\n//    }\r\n//   }\r\n\r\n// ));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}